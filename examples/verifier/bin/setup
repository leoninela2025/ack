#!/usr/bin/env sh

#
# This file initializes the repository for local development and CI.
#
# This file should be run after cloning the repository for the first time, but
# is safe to run multiple times.
#

# Environment file configuration
ENV_FILE=".env"
EXAMPLE_FILE=".env.example"

ENV_FILE_PATH="$(dirname $0)/../${ENV_FILE}"
EXAMPLE_FILE_PATH="$(dirname $0)/../${EXAMPLE_FILE}"

# Adds a secret to the .env file unless the key is already defined. This
# allows us to add new default values even if a `.env` file already exists
define_secret() {
  local secret_name=$1
  local secret_value=$2

  # Check if the secret exists and has a non-empty value
  if grep -q "^${secret_name}=\"[^\"]\\+\"" "${ENV_FILE_PATH}"; then
    echo "  > '${secret_name}' already defined, skipping ..."
    return
  fi

  # Remove any existing line with this secret name (in case it was empty)
  if [ -f "${ENV_FILE_PATH}" ]; then
    grep -v "^${secret_name}=" "${ENV_FILE_PATH}" > "${ENV_FILE_PATH}.tmp"
    mv "${ENV_FILE_PATH}.tmp" "${ENV_FILE_PATH}"
  fi

  echo "  > Setting '${secret_name}' ..."
  echo "${secret_name}=\"${secret_value}\"" >> "${ENV_FILE_PATH}"
}

#
# Create an environment file from the example file (if it exists)and populate it
# with auto-generated secrets
#
echo "\n✨ Creating a ${ENV_FILE} file for local environment variables..."
if [ ! -f "${ENV_FILE_PATH}" ]; then
  if [ -f "${EXAMPLE_FILE_PATH}" ]; then
    echo "\n✨ Creating ${ENV_FILE} file from ${EXAMPLE_FILE}..."
    cp "${EXAMPLE_FILE_PATH}" "${ENV_FILE_PATH}"
  else
    echo "\n✨ ${EXAMPLE_FILE} not found, creating empty ${ENV_FILE}..."
    touch "${ENV_FILE_PATH}"
  fi
else
  echo "\n✨ ${ENV_FILE} file already exists, skipping..."
fi
# Add any secrets here
define_secret "VERIFIER_PRIVATE_KEY" "0x$(./bin/secret)"
